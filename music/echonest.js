// Generated by CoffeeScript 1.10.0
var API_KEY, Echonest, colors, got, log, ok;

colors = require("colors");

got = require("got");

log = function() {
  return console.log.apply(console, arguments);
};

ok = function() {
  return Object.keys.apply(Object, arguments);
};

API_KEY = "<YOUR_API_KEY>";

Echonest = {
  apiVersion: 4,
  api_url: function() {
    return "http://developer.echonest.com/api/v" + this.apiVersion + "/";
  },
  getSimilarArtists: function(options) {
    var apiEntry, artist;
    if ((typeof options.artists === 'object') && (options.artists instanceof Array)) {
      artist = "";
      options.artists.forEach(function(a) {
        return artist += "&name=" + (encodeURI(a));
      });
    } else {
      artist = "&name=" + encodeURI(options.artists);
    }
    if (options.results && typeof options.results === 'number') {
      apiEntry = (this.api_url()) + "artist/similar?api_key=" + API_KEY + artist + "&results=" + options.results;
    } else {
      apiEntry = (this.api_url()) + "artist/similar?api_key=" + API_KEY + artist;
    }
    log("Contacting: " + apiEntry + " ...");
    return got(apiEntry, {
      json: true
    });
  }
};

Echonest.getSimilarArtists({
  artists: "Bob Dylan",
  results: 3
}).then(function(data) {
  data = data.body.response;
  log(data.status.message);
  return data.artists.forEach(function(o) {
    return log(o.id, o.name.cyan);
  });
})["catch"](function(e) {
  return log("e", e);
});

Echonest.getSimilarArtists({
  artists: ["Mozart", "Vivaldi"]
}).then(function(data) {
  data = data.body.response;
  log(data.status.message);
  return data.artists.forEach(function(o) {
    return log(o.id, o.name.cyan);
  });
})["catch"](function(e) {
  return log("e", e);
});
